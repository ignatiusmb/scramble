const RANDOM_TIME=44;function jumble(textLen,firstChar){let newText="";if(void 0!==firstChar){newText=String.fromCharCode(firstChar);for(let i=1;i<textLen;i++)newText+=String.fromCharCode(randNum(33,126))}else for(let i=0;i<textLen;i++)newText+=String.fromCharCode(randNum(33,126));return newText}function disorder(elem){const original=elem.textContent,repeat=setInterval(()=>{elem.textContent=jumble(original.length)},RANDOM_TIME);return{original:original,process:()=>(clearInterval(repeat),scramble(elem,original)),start:()=>{setInterval(repeat,RANDOM_TIME)},stop:()=>{clearInterval(repeat)}}}function decode(original,decodeLen,firstChar){let newText=original.substring(0,decodeLen);return void 0===firstChar?newText+jumble(original.length-decodeLen):newText+jumble(original.length-decodeLen,firstChar)}function scramble(elem,original){let text,timer,letterIndex=0,textLen=(text=void 0!==original?original:elem.textContent).length,firstIter=disorder(elem);return function iteration(){clearInterval(timer),timer=setInterval(()=>{letterIndex>=textLen&&clearInterval(timer),firstIter.stop(),elem.textContent=decode(text,letterIndex)},RANDOM_TIME),letterIndex++>=textLen?clearTimeout(iteration):setTimeout(iteration,313)}(),{finished:()=>letterIndex>=textLen}}function scrambleAll(elemList){const listSize=elemList.length;let disarray=[],executed=Array(listSize).fill(!1);for(let i=0;i<listSize;i++)disarray.push(disorder(elemList[i]));return function check(){for(let i=0;i<listSize;i++)!1===executed[i]&&inViewport(elemList[i])&&(disarray[i].process(),executed[i]=!0);arrayCheck(executed,!0)?clearTimeout(check):setTimeout(check,500)}(),{status:index=>decoded[index]}}function bruteforce(random,elem){const text=elem.textContent;let textLen=text.length,letterIndex=0;if(elem.textContent=jumble(textLen),random)!function check(){elem.textContent=decode(text,letterIndex),elem.textContent.charAt(letterIndex)===text.charAt(letterIndex)&&letterIndex++,letterIndex<=textLen?setTimeout(check,RANDOM_TIME/2):clearTimeout(check)}();else{let index=32;!function check(){index>126&&(index=32),elem.textContent=decode(text,letterIndex,index++),elem.textContent.charAt(letterIndex)===text.charAt(letterIndex)&&(index=32,letterIndex++),letterIndex<textLen?setTimeout(check,RANDOM_TIME/2):clearTimeout(check)}()}return{finished:()=>letterIndex>=textLen}}function successiveScramble(elemList){let next=[],recursiveExec=index=>{next[index]=next[index].process(),function repeat(){next[index].finished()?recursiveExec(index+1):setTimeout(repeat,1e3)}()};for(let i=0;i<elemList.length;i++)next.push(disorder(elemList[i]));recursiveExec(0)}